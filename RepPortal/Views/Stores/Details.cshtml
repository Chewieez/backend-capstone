@model RepPortal.Models.StoreViewModels.StoreDetailViewModel

@{
    ViewData["Title"] = "Store Details";
}

<h2>
    <a asp-action="Index" class=""><span class="glyphicon glyphicon-chevron-left back-arrow" aria-hidden="true" data-toggle="tooltip" title="Back to Stores list"></span></a>
    Store Details
</h2>

<hr />
<div class="row">
    <div class="col-sm-12 col-md-7">
        @if (Model.Flag1 == null)
        {
            <p>
                <button class="btn btn-info" type="button" id="addressSearch"
                        onclick="location.href='@Url.Action("AddFlag", "Stores", new { id = Model.Store.StoreId })'" data-toggle="tooltip" title="Click to add reminder">
                    Follow Up?
                </button>
                
            </p>
        }
        <div class="store-details__Name">
            <h3>
                @Html.DisplayFor(model => model.Store.Name)

                @if (Model.Flag1 != null)
                {
                    <img src="~/images/flag.svg" alt="Follow Up" class="img-responsive inline" width="25" data-toggle="tooltip" title="Follow Up!" />
                }
            </h3>
        </div>

        <dl class="dl-horizontal white-background rounded store-details">
            <dt>
                @Html.DisplayNameFor(model => model.Store.Status)
            </dt>
            <dd>
                <img src='@string.Format("/images/map-icons/Shopping_Bag_{0}.svg", Model.Store.StatusId)' data-toggle="tooltip" title="@Model.Store.Status.Name" />
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.StreetAddress)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.StreetAddress)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.City)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.City)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.State)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.State.Name)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.Zipcode)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.Zipcode)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.PhoneNumber)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.PhoneNumber)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.Email)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.Email)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.WebsiteURL)
            </dt>
            <dd>
                <a href="@Html.DisplayFor(model => model.Store.WebsiteURL)" target="_blank">@Html.DisplayFor(model => model.Store.WebsiteURL)</a>
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.ContactName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.ContactName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.SalesRep)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.SalesRep.FirstName) @Html.DisplayFor(model => model.Store.SalesRep.LastName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.DateAdded)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.DateAdded)
            </dd>
            @if (@Model.Store.StatusId == 4)
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Store.DateClosed)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Store.DateClosed)
                </dd>
            }
            <dt>
                @Html.DisplayNameFor(model => model.Store.LastOrderTotal)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.LastOrderTotal)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.LastOrderDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.LastOrderDate)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.LastOrderShipDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.LastOrderShipDate)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Store.LastOrderPaidDate)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Store.LastOrderPaidDate)
            </dd>
        </dl>

        @if (User.IsInRole("Administrator"))
        {
        <div class="col-md-7">

            <a asp-action="Edit" asp-route-id="@Model.Store.StoreId" class="btn btn-default">
                <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                <span class="edit-btn-text">Edit</span>
            </a>
            <a asp-action="Delete" asp-route-id="@Model.Store.StoreId" class="btn btn-warning">
                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                <span class="delete-btn-text">Delete</span>
            </a>
        </div>
        }


    </div>
    <div class="col-md-5 store-notes">
        @await Component.InvokeAsync("StoreNotes", new { storeId = Model.Store.StoreId })
    </div>
</div>

