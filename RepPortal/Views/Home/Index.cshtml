@inject SignInManager<ApplicationUser> SignInManager
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject RepPortal.Services.IApplicationConfiguration AppSettings;


@{
    ViewData["Title"] = "Home Page";
}

@if (SignInManager.IsSignedIn(User) && User.IsInRole("Administrator"))
{
    <div>

        <a asp-controller="Stores" asp-action="Create" class="btn btn-default">Add A Store</a>
    </div>
}

@if (SignInManager.IsSignedIn(User))
{
    <div class="mapContainer">
        <div id="map"></div>
    </div>
}

<script type="text/javascript">
    const googleAPI = Object.create(null, {
        "key": {
            get: () => '@AppSettings.GoogleAPIKey'
        }
    })
    Object.freeze(googleAPI)
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@(AppSettings.GoogleAPIKey)"></script>
