@inject SignInManager<ApplicationUser> SignInManager
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@inject RepPortal.Services.IApplicationConfiguration AppSettings;
@model IEnumerable<RepPortal.Models.Note>


@{
    ViewData["Title"] = "Freshie & Zero Sales Rep Dashboard";
}


<div class="row">
    @if (SignInManager.IsSignedIn(User))
    {
        @*<div class="row">*@

            <div class="mapContainer rounded col-md-8">
                <div id="map"><input id="pac-input" class="controls form-control googlemap-search-bar" type="text" placeholder="Search"></div>

                <div id="legend">
                    <div id="legend-innerContainer">
                        <span class="bold">Legend:</span>
                    </div>
                </div>
            </div>
            <div class="col-sm-4 pull-right">
                @await Component.InvokeAsync("Notes")
            </div>
        @*</div>*@

        @*<div class="row">*@
            <div class="col-md-8 pull-left">
                @await Component.InvokeAsync("FlagsList")
            </div>

            @if (SignInManager.IsSignedIn(User) && User.IsInRole("Administrator"))
            {
                <div class="col-sm-8">
                    <br />
                    <a asp-controller="Stores" asp-action="Create" class="btn btn-primary">Add A Store</a>
                </div>
            }

        @*</div>*@
    }
</div>

<script type="text/javascript">
    const googleAPI = Object.create(null, {
        "key": {
            get: () => '@AppSettings.GoogleAPIKey'
        }
    })
    Object.freeze(googleAPI)
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@(AppSettings.GoogleAPIKey)&libraries=places"></script>
